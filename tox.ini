[tox]
envlist =
    lint
    ;typing
    py-unit
    py-e2e

isolated_build = true
minversion = 3.20.0
skipsdist = true

[testenv]
description = run the pytest tests under {basepython}
skip_install = true
deps = -r requirements/tests.txt
commands =
    unit: pytest tests/unit
    e2e: pytest tests/e2e

[testenv:lint]
description = run code style and linting checks with pre-commit
skip_install = true
deps = -r requirements/pre-commit.txt
commands =
    pre-commit run --all-files --show-diff-on-failure --verbose

[testenv:typing]
description = run typing checks with mypy
skip_install = true
deps = -r requirements/typing.txt
commands =
    mypy --config-file=mypy.ini --cache-dir=/dev/null --no-incremental

[testenv:docs]
description = generate Sphinx HTML documentation
skip_install = true
deps = -r requirements/docs.txt
allowlist_externals = make
commands =
    ;rm -f docs/ridgeplot.rst
	;rm -f docs/modules.rst
	;sphinx-apidoc -o docs/ ridgeplot
    make --directory=docs clean
    make --directory=docs html
    python "scripts/open_in_browser.py" "docs/build/html/index.html"
    ;sphinx-autobuild --open-browser --delay=0 docs docs/build/html

[testenv:release-notes]
description = extract release notes from CHANGES.md
skip_install = true
deps = -r requirements/release-notes.txt
commands =
    python scripts/extract_latest_release_notes.py

[testenv:build]
description = build source and wheel package
skip_install = true
deps = -r requirements/release.txt
commands =
    python -m build
    twine check --strict dist/*
    twine check --strict dist/*

[testenv:publish-pypi-test]
description = package and upload the source and wheel package to test PyPI
depends = build
skip_install = true
deps = -r requirements/release.txt
passenv = TWINE_PASSWORD
commands =
    twine upload --verbose --repository testpypi dist/*

[testenv:publish-pypi]
description = package and upload the source and wheel package to PyPI
depends = build
skip_install = true
deps = -r requirements/release.txt
passenv = TWINE_PASSWORD
commands =
    twine upload --verbose dist/*

[testenv:upgrade-deps]
description = upgrade and lock dependencies
skip_install = true
deps = -r requirements/dependency-management.txt
commands =
    pre-commit autoupdate
    pip-compile-multi
