#!/usr/bin/env python
import os
import platform
import subprocess
import sys

ANSI_RED = "\033[31m"
ANSI_RESET = "\033[0m"


def _exit(exit_code: int) -> None:
    cmd_original = " ".join(sys.argv)
    msg = f"{cmd_original!r} failed with exit code {exit_code}"
    print(f"{ANSI_RED}{msg}{ANSI_RESET}", file=sys.stderr)
    sys.exit(exit_code)


def main() -> None:
    env_vars = (
        ("PY_PYTHON_VERSION", "".join(platform.python_version_tuple()[:2])),
        ("PY_SYS_PLATFORM", sys.platform),
    )
    for env_var_name, env_var_value in env_vars:
        print(f"Setting {env_var_name} to {env_var_value!r}")
        os.environ[env_var_name] = env_var_value

    popen_args = ["tox", *sys.argv[1:]]
    cmd_string = " ".join(popen_args)
    print(f"Running {cmd_string!r}")

    try:
        subprocess.run(popen_args, capture_output=False, check=True)
    except subprocess.CalledProcessError as exc:
        _exit(exc.returncode)


if __name__ == "__main__":
    main()
